version: 2
workflows:
  version: 2
  build_and_test:
    jobs:
      - clean-code
      - test:
          requires:
            - clean-code
      - race:
          requires:
            - clean-code
      - compile:
          requires:
            - clean-code
jobs:
  clean-code:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/u-root/u-bmc
    steps:
      - checkout
      - run:
          name: Install dep
          command: |
            wget https://github.com/golang/dep/releases/download/v0.5.0/dep-linux-amd64
            mv dep-linux-amd64 dep
            chmod +x dep
      - run:
          name: Install ineffassign
          command: go get github.com/gordonklaus/ineffassign
      - run:
          name: Check vendored dependencies
          command: |
            ./dep version
            ./dep status
            ./dep ensure -vendor-only
            git status
            if [[ -n "$(git status --porcelain vendor)" ]]; then
              echo 'vendor/ is out-of-date: run `dep ensure -vendor-only` and then check in the changes'
              echo 'If `dep ensure` results in no changes, make sure you are using the latest relase of dep'
              git status --porcelain vendor
              exit 1
            fi
      - run:
          name: vet
          command: |
            go tool vet cmd pkg
      - run:
          name: gofmt
          command: |
              test -z $(gofmt -s -l $(go list ./... | grep -v /vendor/))
      - run:
          name: ineffassign
          command: ineffassign .
  test:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Test all
          command: go test -a -ldflags '-s' ./pkg/... ./cmd/...
      - run:
          name: Test coverage
          command: go test -cover ./pkg/... ./cmd/...
  race:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 1
    steps:
      - checkout
      - run:
          name: Race detector
          command: go test -race ./pkg/... ./cmd/...
  compile:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: build all commands
          command: |
            cd cmd
            go install -a ./...
