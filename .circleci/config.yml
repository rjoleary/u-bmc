version: 2
workflows:
  version: 2
  build_and_test:
    jobs:
      - clean-code
      - test:
          requires:
            - clean-code
      - race:
          requires:
            - clean-code
      - compile:
          requires:
            - clean-code
jobs:
  clean-code:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/u-root/u-bmc
    steps:
      - checkout
      - run:
          name: Install ineffassign
          command: go get github.com/gordonklaus/ineffassign
      - run:
          name: vet
          command: go tool vet cmd pkg
      - run:
          name: gofmt
          command: test -z $(gofmt -s -l $(go list ./... | grep -v /vendor/))
      - run:
          name: ineffassign
          command: ineffassign .
  test:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: Get dependencies
          command: |
            go get github.com/golang/protobuf/proto
            go get github.com/mdlayher/genetlink
            go get github.com/mdlayher/netlink
            go get github.com/tarm/serial
            go get github.com/u-root/u-root
            go get github.com/vishvananda/netlink
            go get golang.org/x/net/context
            go get golang.org/x/sys/unix
            go get google.golang.org/grpc
            go get google.golang.org/grpc/reflection
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f ./ssh_keys
            make -C pkg/bmc ssh_keys.go
      - run:
          name: Test all
          command: go test -a -ldflags '-s' ./...
      - run:
          name: Test coverage
          command: go test -cover ./...
  race:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 1
    steps:
      - checkout
      - run:
          name: Get dependencies
          command: |
            go get github.com/golang/protobuf/proto
            go get github.com/mdlayher/genetlink
            go get github.com/mdlayher/netlink
            go get github.com/tarm/serial
            go get github.com/u-root/u-root
            go get github.com/vishvananda/netlink
            go get golang.org/x/net/context
            go get golang.org/x/sys/unix
            go get google.golang.org/grpc
            go get google.golang.org/grpc/reflection
      - run:
          name: Create test key
          command: |
            ssh-keygen -t rsa -b 4096 -C "testkey" -N "testpass" -f ./ssh_keys
            make -C pkg/bmc ssh_keys.go
      - run:
          name: Race detector
          command: go test -race ./...
  compile:
    docker:
      - image: circleci/golang:1.11
    working_directory: /go/src/github.com/u-root/u-bmc
    environment:
      - CGO_ENABLED: 0
    steps:
      - checkout
      - run:
          name: build all commands
          command: |
            cd cmd
            go install -a ./...
